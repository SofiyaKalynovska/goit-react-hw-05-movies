{"version":3,"file":"static/js/387.38ebcfba.chunk.js","mappings":"yRAEaA,EAAWC,EAAAA,GAAAA,GAAH,6LAQRC,EAAWD,EAAAA,GAAAA,GAAH,sHAORE,EAAYF,EAAAA,GAAAA,IAAH,yDAKTG,EAAWH,EAAAA,GAAAA,EAAH,0C,SC8BrB,EA7Ca,WACX,IAAQI,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwBE,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KAmBA,OAjBAC,EAAAA,EAAAA,YAAU,WAAM,wCAEZ,8EAEE,KACEC,EAAAA,EAAAA,IAAeN,GAASO,MAAK,SAAAC,GAC3BJ,EAAQI,EAAQL,KACnB,GAIA,CAFC,MAAOM,GACPC,EAAAA,GAAAA,MAAY,6DACb,CATH,4CAFY,uBAAC,WAAD,wBAaZC,EAEH,GAAE,CAACX,IAGFG,EAAKS,OAAS,IACZ,iCACE,SAACjB,EAAD,UACGQ,EAAKU,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,aAAcC,EAArB,EAAqBA,cAAeC,EAApC,EAAoCA,UAApC,OACR,UAACpB,EAAD,YACE,SAACC,EAAD,CACEoB,IACEH,EAAY,0CAC2BA,GAD3B,gGAIdI,IAAKH,KAEP,SAACjB,EAAD,UAAWiB,KACX,UAACjB,EAAD,yBAAsBkB,OAVTH,EADP,OAeZ,SAAC,KAAD,MAIP,C,8LCjDDM,EAAAA,GAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAU,mCAGHC,EAAa,mCAAG,oGACJF,EAAAA,GAAAA,IAAA,qCAAwCC,EAAxC,SAAwD,IADpD,cACrBE,EADqB,yBAEpBA,EAASC,MAFW,2CAAH,qDAIbC,EAAgB,mCAAG,WAAOC,GAAP,uFACPN,EAAAA,GAAAA,IAAU,gBAAiB,CAChDO,OAAQ,CACNC,QAASP,EACTK,MAAM,GAAD,OAAKA,MAJgB,cACxBH,EADwB,yBAOvBA,EAASC,MAPc,2CAAH,sDAUhBK,EAAiB,mCAAG,WAAOC,GAAP,uFACRV,EAAAA,GAAAA,IAAA,gBAAmBU,EAAnB,oBAAuCT,IAD/B,cACzBE,EADyB,yBAExBA,EAASC,MAFe,2CAAH,sDAKjBlB,EAAc,mCAAG,WAAOwB,GAAP,uFACLV,EAAAA,GAAAA,IAAA,gBAAmBU,EAAnB,4BAA+CT,IAD1C,cACtBE,EADsB,yBAErBA,EAASC,MAFY,2CAAH,sDAKpB,SAAeO,EAAtB,+CAAO,OAAP,oBAAO,WAAiCD,GAAjC,gGAEoBV,EAAAA,GAAAA,IAAA,gBAAmBU,EAAnB,4BAA+CT,IAFnE,cAEGE,EAFH,yBAGIA,EAASC,MAHb,gCAKH,IAAIQ,MAAM,kBALP,gF","sources":["components/Cast/Cast.styled.js","components/Cast/Cast.jsx","components/api.js"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const CastList = styled.ul`\nmargin-bottom: 10px;\npadding: 20px;\ndisplay: flex;\nflex-wrap: wrap;\ngap: 20px;\nbox-shadow: rgba(0, 0, 0, 0.19) 0px 10px 20px, rgba(0, 0, 0, 0.23) 0px 6px 6px;\n`\nexport const CastItem = styled.li`\npadding: 10px;\ndisplay: flex;\nheight: max-content;\nflex-direction: column;\nwidth: 300px;\n`\nexport const CastPhoto = styled.img`\nwidth: 200px;\nheight: 300px;\n\n`\nexport const CastText = styled.p`\nfont-size: 24px;\n`\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMovieCast } from 'components/api';\n\nimport { ToastContainer, toast } from 'react-toastify';\nimport { CastItem, CastList, CastPhoto, CastText } from './Cast.styled';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState([]);\n  \n  useEffect(() => {\n    \n      async function getCast() {\n        \n        try {\n          fetchMovieCast(movieId).then(details => {\n            setCast(details.cast)\n        })\n          \n        } catch (error) {\n          toast.error('Something went wrong while cast loading! Please try again!');\n        } \n      }\n      getCast();\n    // }\n  }, [movieId]);\n\n  return (\n    cast.length > 0 && (\n      <>\n        <CastList>\n          {cast.map(({ id, profile_path, original_name, character }) => (\n            <CastItem key={id}>\n              <CastPhoto\n                src={\n                  profile_path\n                    ? `https://image.tmdb.org/t/p/w500/${profile_path}`\n                    : `https://thesource.sa.ua.edu/wp-content/uploads/sites/57/2019/08/no-person-200x300-200x300.png`\n                }\n                alt={original_name}\n              />\n              <CastText>{original_name}</CastText>\n              <CastText>Character: {character}</CastText>\n            </CastItem>\n          ))}\n        </CastList>\n        <ToastContainer />\n      </>\n    )\n  );\n};\nexport default Cast;","import axios from \"axios\";\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '4707371d53aa0467b337f4fda109b465';\n\n\nexport const fetchTrending = async () => {\n  const response = await axios.get(`trending/movie/day?api_key=${API_KEY}&page=${1}`)\n  return response.data\n}\nexport const fetchSearchMovie = async (query) => {\n  const response = await axios.get('search/movie?', {\n    params: {\n      api_key: API_KEY,\n      query: `${query}`,\n    }\n  })\n  return response.data\n}\n\nexport const fetchMovieDetails = async (movie_id) => {\n  const response = await axios.get(`movie/${movie_id}?api_key=${API_KEY}`)\n  return response.data\n}\n\nexport const fetchMovieCast = async (movie_id) => {\n  const response = await axios.get(`movie/${movie_id}/credits?api_key=${API_KEY}`)\n  return response.data\n}\n\nexport async function fetchMovieReviews(movie_id) {\n  try {\n    const response = await axios.get(`movie/${movie_id}/reviews?api_key=${API_KEY}`)\n    return response.data\n  } catch (error) {\n    new Error('Page not found')\n  }\n}"],"names":["CastList","styled","CastItem","CastPhoto","CastText","movieId","useParams","useState","cast","setCast","useEffect","fetchMovieCast","then","details","error","toast","getCast","length","map","id","profile_path","original_name","character","src","alt","axios","API_KEY","fetchTrending","response","data","fetchSearchMovie","query","params","api_key","fetchMovieDetails","movie_id","fetchMovieReviews","Error"],"sourceRoot":""}