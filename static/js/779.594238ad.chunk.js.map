{"version":3,"file":"static/js/779.594238ad.chunk.js","mappings":"yRAEaA,EAAcC,EAAAA,GAAAA,GAAH,yGAGXC,EAAcD,EAAAA,GAAAA,GAAH,8CAGXE,EAAeF,EAAAA,GAAAA,GAAH,6DAIZG,EAAaH,EAAAA,GAAAA,EAAH,0C,SCwCvB,EAxCgB,WACd,IAAQI,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwCE,EAAAA,EAAAA,UAAS,IAAjD,eAAOC,EAAP,KAAqBC,EAArB,KAqBA,OAlBAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,8EACE,KACGC,EAAAA,EAAAA,IAAkBN,GAASO,MAAK,SAAAC,GAC/BJ,EAAgBI,EAAQC,QACzB,GAOF,CAJC,MAAOC,GACPC,EAAAA,GAAAA,MACE,gEAEH,CAXH,4CADc,uBAAC,WAAD,wBAcdC,EAED,GAAE,CAACZ,KAGF,+BACE,UAACL,EAAD,WACGQ,EAAaU,OAAS,EACnBV,EAAaW,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACf,UAACpB,EAAD,YACE,UAACC,EAAD,sBAAuBkB,MACvB,SAACjB,EAAD,UAAakB,MAFGF,EADH,IAMjB,6CAEJ,SAAC,KAAD,QAIP,C,8LCjDDG,EAAAA,GAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAU,mCAGHC,EAAa,mCAAG,oGACJF,EAAAA,GAAAA,IAAA,qCAAwCC,EAAxC,SAAwD,IADpD,cACrBE,EADqB,yBAEpBA,EAASC,MAFW,2CAAH,qDAIbC,EAAgB,mCAAG,WAAOC,GAAP,uFACPN,EAAAA,GAAAA,IAAU,gBAAiB,CAChDO,OAAQ,CACNC,QAASP,EACTK,MAAM,GAAD,OAAKA,MAJgB,cACxBH,EADwB,yBAOvBA,EAASC,MAPc,2CAAH,sDAUhBK,EAAiB,mCAAG,WAAOC,GAAP,uFACRV,EAAAA,GAAAA,IAAA,gBAAmBU,EAAnB,oBAAuCT,IAD/B,cACzBE,EADyB,yBAExBA,EAASC,MAFe,2CAAH,sDAKjBO,EAAc,mCAAG,WAAOD,GAAP,uFACLV,EAAAA,GAAAA,IAAA,gBAAmBU,EAAnB,4BAA+CT,IAD1C,cACtBE,EADsB,yBAErBA,EAASC,MAFY,2CAAH,sDAKpB,SAAehB,EAAtB,+CAAO,OAAP,oBAAO,WAAiCsB,GAAjC,gGAEoBV,EAAAA,GAAAA,IAAA,gBAAmBU,EAAnB,4BAA+CT,IAFnE,cAEGE,EAFH,yBAGIA,EAASC,MAHb,gCAKH,IAAIQ,MAAM,kBALP,gF","sources":["components/Reviews/Reviews.styled.js","components/Reviews/Reviews.jsx","components/api.js"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const ReviewsList = styled.ul`\nbox-shadow: rgba(0, 0, 0, 0.19) 0px 10px 20px, rgba(0, 0, 0, 0.23) 0px 6px 6px;\n`\nexport const ReviewsItem = styled.li`\nmargin-bottom: 10px;\n`\nexport const ReviewAuthor = styled.h3`\nfont-size: 28px;\nfont-weight: 600;\n`\nexport const ReviewText = styled.p`\nfont-size: 24px;\n`","import { useParams } from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\nimport { fetchMovieReviews } from \"components/api\";\nimport { ToastContainer, toast } from 'react-toastify';\n\nimport {\n  ReviewsList,\n  ReviewsItem,\n  ReviewAuthor,\n  ReviewText,\n} from './Reviews.styled';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [movieReviews, setMovieReviews] = useState([]);\n  \n\n  useEffect(() => {\n    async function getMovieReviews() {\n      try {\n         fetchMovieReviews(movieId).then(reviews => {\n          setMovieReviews(reviews.results);\n        }\n          \n        );\n      } catch (error) {\n        toast.error(\n          'Something went wrong while reviews loading! Please try again!'\n        );\n      } \n    }\n    getMovieReviews();\n    \n  }, [movieId]);\n\n  return (\n    <>\n      <ReviewsList>\n        {movieReviews.length > 0\n          ? movieReviews.map(({ id, author, content }) => (\n              <ReviewsItem key={id}>\n                <ReviewAuthor>Author: {author}</ReviewAuthor>\n                <ReviewText>{content}</ReviewText>\n              </ReviewsItem>\n            ))\n          : 'We don`t have any reviews for this movie.'}\n\n        <ToastContainer />\n      </ReviewsList>\n    </>\n  );\n};\nexport default Reviews;\n\n","import axios from \"axios\";\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '4707371d53aa0467b337f4fda109b465';\n\n\nexport const fetchTrending = async () => {\n  const response = await axios.get(`trending/movie/day?api_key=${API_KEY}&page=${1}`)\n  return response.data\n}\nexport const fetchSearchMovie = async (query) => {\n  const response = await axios.get('search/movie?', {\n    params: {\n      api_key: API_KEY,\n      query: `${query}`,\n    }\n  })\n  return response.data\n}\n\nexport const fetchMovieDetails = async (movie_id) => {\n  const response = await axios.get(`movie/${movie_id}?api_key=${API_KEY}`)\n  return response.data\n}\n\nexport const fetchMovieCast = async (movie_id) => {\n  const response = await axios.get(`movie/${movie_id}/credits?api_key=${API_KEY}`)\n  return response.data\n}\n\nexport async function fetchMovieReviews(movie_id) {\n  try {\n    const response = await axios.get(`movie/${movie_id}/reviews?api_key=${API_KEY}`)\n    return response.data\n  } catch (error) {\n    new Error('Page not found')\n  }\n}"],"names":["ReviewsList","styled","ReviewsItem","ReviewAuthor","ReviewText","movieId","useParams","useState","movieReviews","setMovieReviews","useEffect","fetchMovieReviews","then","reviews","results","error","toast","getMovieReviews","length","map","id","author","content","axios","API_KEY","fetchTrending","response","data","fetchSearchMovie","query","params","api_key","fetchMovieDetails","movie_id","fetchMovieCast","Error"],"sourceRoot":""}