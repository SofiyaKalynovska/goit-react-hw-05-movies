{"version":3,"file":"static/js/304.c1943e16.chunk.js","mappings":"oMAEaA,EAAaC,EAAAA,GAAAA,GAAH,gTAeVC,EAAYD,EAAAA,GAAAA,GAAH,4DAITE,EAASF,EAAAA,GAAAA,IAAH,qFAKNG,EAAaH,EAAAA,GAAAA,GAAH,2F,2BCtBVI,EAAO,SAAC,GAAiC,IAA/BC,EAA8B,EAA9BA,aAAcC,EAAgB,EAAhBA,UAC7BC,GAAWC,EAAAA,EAAAA,MACjB,OACE,SAACT,EAAD,UACGM,EAAaI,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAOC,EAAd,EAAcA,YAAd,OAChB,SAACX,EAAD,WACE,UAAC,KAAD,CAAMY,GAAE,UAAKP,GAAL,OAAiBI,GAAMI,MAAO,CAAEC,KAAMR,GAA9C,WACE,SAACJ,EAAD,UAAaQ,KACb,SAACT,EAAD,CACEc,IACEJ,EAAW,0CAC4BA,GAD5B,sDALHF,EADA,KAgBvB,C,8LCtBDO,EAAAA,GAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAU,mCAGHC,EAAa,mCAAG,oGACJF,EAAAA,GAAAA,IAAA,qCAAwCC,EAAxC,SAAwD,IADpD,cACrBE,EADqB,yBAEpBA,EAASC,MAFW,2CAAH,qDAIbC,EAAgB,mCAAG,WAAOC,GAAP,uFACPN,EAAAA,GAAAA,IAAU,gBAAiB,CAChDO,OAAQ,CACNC,QAASP,EACTK,MAAM,GAAD,OAAKA,MAJgB,cACxBH,EADwB,yBAOvBA,EAASC,MAPc,2CAAH,sDAUhBK,EAAiB,mCAAG,WAAOC,GAAP,uFACRV,EAAAA,GAAAA,IAAA,gBAAmBU,EAAnB,oBAAuCT,IAD/B,cACzBE,EADyB,yBAExBA,EAASC,MAFe,2CAAH,sDAKjBO,EAAc,mCAAG,WAAOD,GAAP,uFACLV,EAAAA,GAAAA,IAAA,gBAAmBU,EAAnB,4BAA+CT,IAD1C,cACtBE,EADsB,yBAErBA,EAASC,MAFY,2CAAH,sDAKpB,SAAeQ,EAAtB,+CAAO,OAAP,oBAAO,WAAiCF,GAAjC,gGAEoBV,EAAAA,GAAAA,IAAA,gBAAmBU,EAAnB,4BAA+CT,IAFnE,cAEGE,EAFH,yBAGIA,EAASC,MAHb,gCAKH,IAAIS,MAAM,kBALP,gF,iJC5BMC,E,OAAQ/B,GAAAA,GAAH,iF,oCC+BlB,EA1Ba,WACX,OAA4CgC,EAAAA,EAAAA,UAAS,IAArD,eAAOC,EAAP,KAAuBC,EAAvB,KAcA,OAZAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,8GAE8BhB,EAAAA,EAAAA,MAF9B,OAEUiB,EAFV,OAGIF,GAAkB,OAAIE,EAAYC,UAHtC,gDAKIC,EAAAA,GAAAA,MAAY,8CALhB,0DADc,uBAAC,WAAD,wBAUdC,EACD,GAAE,KAED,iCACE,SAACR,EAAD,8BACA,SAAC,IAAD,CACE1B,aAAc4B,EACd3B,UAAW,aAEb,SAAC,KAAD,MAGL,C","sources":["components/MoviesList/MoviesList.styled.js","components/MoviesList/MoviesList.jsx","components/api.js","pages/Home/Home.styled.js","pages/Home/Home.jsx"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const MoviesList = styled.ul`\ngap: 10px;\ndisplay: flex;\nflex-wrap: wrap;\ntext-align: center;\njustify-content: center;\n@media screen and (min-width: 1129px){\n  justify-content: flex-start;\n  margin-left: 30px;\n}\n@media screen and (min-width: 1509px){\n  justify-content: center;\n  margin-left: 0;\n}\n`\nexport const MovieItem = styled.li`\nmargin: 10px;\nwidth: max-content;\n`\nexport const Poster = styled.img`\n  width: 350px;\n  height: 500px;\n  margin-bottom: 10px;\n  `\nexport const MovieTitle = styled.h3`\nwidth: 350px;\nheight: 35px;\nfont-size: 24px;\nfont-weight: 600;\n`","import { MoviesList, MovieItem, MovieTitle, Poster } from './MoviesList.styled';\nimport PropTypes from 'prop-types';\nimport { Link, useLocation } from 'react-router-dom';\n\nexport const List = ({ listToRender, addedPath }) => {\n  const location = useLocation();\n  return (\n    <MoviesList>\n      {listToRender.map(({ id, title, poster_path }) => (\n        <MovieItem key={id}>\n          <Link to={`${addedPath}${id}`} state={{ from: location }}>\n            <MovieTitle>{title}</MovieTitle>\n            <Poster\n              src={\n                poster_path\n                  ? `https://image.tmdb.org/t/p/w500/${poster_path}`\n                  : `http://m.mooeraudio.com/public/img/no-img.svg`\n              }\n            />\n          </Link>\n        </MovieItem>\n      ))}\n    </MoviesList>\n  );\n};\nList.propTypes = {\n  listToRender: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n      poster_path: PropTypes.string,\n    })\n  ),\n  addedPath: PropTypes.string.isRequired,\n};\n","import axios from \"axios\";\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '4707371d53aa0467b337f4fda109b465';\n\n\nexport const fetchTrending = async () => {\n  const response = await axios.get(`trending/movie/day?api_key=${API_KEY}&page=${1}`)\n  return response.data\n}\nexport const fetchSearchMovie = async (query) => {\n  const response = await axios.get('search/movie?', {\n    params: {\n      api_key: API_KEY,\n      query: `${query}`,\n    }\n  })\n  return response.data\n}\n\nexport const fetchMovieDetails = async (movie_id) => {\n  const response = await axios.get(`movie/${movie_id}?api_key=${API_KEY}`)\n  return response.data\n}\n\nexport const fetchMovieCast = async (movie_id) => {\n  const response = await axios.get(`movie/${movie_id}/credits?api_key=${API_KEY}`)\n  return response.data\n}\n\nexport async function fetchMovieReviews(movie_id) {\n  try {\n    const response = await axios.get(`movie/${movie_id}/reviews?api_key=${API_KEY}`)\n    return response.data\n  } catch (error) {\n    new Error('Page not found')\n  }\n}","import styled from \"styled-components\";\n\nexport const Title = styled.h1`\nmargin-left: 40px;\nfont-size: 700;\nfont-weight: 36px;\n`","import { fetchTrending } from 'components/api';\nimport { useState, useEffect } from 'react';\nimport { Title } from './Home.styled';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { List } from 'components/MoviesList/MoviesList';\n\nconst Home = () => {\n  const [trendingMovies, setTrendingMovies] = useState([]);\n\n  useEffect(() => {\n    async function getTrendingMovies() {\n      try {\n        const arrOfMovies = await fetchTrending();\n        setTrendingMovies([...arrOfMovies.results]);\n      } catch (error) {\n        toast.error('Something happened with trending movies :(');\n      }\n    }\n\n    getTrendingMovies();\n  }, []);\n  return (\n    <>\n      <Title>Trending today</Title>\n      <List\n        listToRender={trendingMovies}\n        addedPath={'movies/'}\n      />\n      <ToastContainer />\n    </>\n  );\n};\nexport default Home;\n"],"names":["MoviesList","styled","MovieItem","Poster","MovieTitle","List","listToRender","addedPath","location","useLocation","map","id","title","poster_path","to","state","from","src","axios","API_KEY","fetchTrending","response","data","fetchSearchMovie","query","params","api_key","fetchMovieDetails","movie_id","fetchMovieCast","fetchMovieReviews","Error","Title","useState","trendingMovies","setTrendingMovies","useEffect","arrOfMovies","results","toast","getTrendingMovies"],"sourceRoot":""}